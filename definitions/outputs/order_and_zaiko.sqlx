config {
    type: "table",
    database: "doctor-ilcsi",
    schema: "dm_looker_studio",
    name: "order_and_zaiko",
    bigquery: {
        partitionBy: "partition_date",
        }
}
with group_order as (
    select logi_item_code, jan_code, sum(amount) as sum_order, phase_name
    from ${ref('order_by_phase')}
    where partition_date < current_date('Asia/Tokyo')
    group by logi_item_code, jan_code, phase_name
),
phase_group_order as (
    select 
    * except(phase_name),
    case
        when phase_name in ('引当待ち', '注文確認') then '未引当て'
        when phase_name in ('発送待ち', 'RSL出荷登録待ち', 'RSL出荷依頼待ち', 'RSL出荷エラー') then '引当て済み'
        else '発送済み'
    end as phase
    from group_order
),
hikiate_order as (
    select logi_item_code, jan_code,
    MAX(CASE WHEN phase = '未引当て' THEN sum_order ELSE NULL END) AS Phase1,
    MAX(CASE WHEN phase = '引当て済み' THEN sum_order ELSE NULL END) AS Phase2,
    MAX(CASE WHEN phase = '発送済み' THEN sum_order ELSE NULL END) AS Phase3,
    from phase_group_order
    group by logi_item_code, jan_code
),
-- RSL在庫数を取得して、一意に修正。jan_codeで結合
rsl_table as (
    select
    jan_code, min(stock) as stock, partition_date
    from ${ref('rsl_zaiko')}
    where jan_code != 'TEST'
    group by jan_code, partition_date
)

select 
    z.logi_item_code,
    ifnull(rsl_table.stock,0) as rsl_stock, -- 物流在庫
    -- ifnull(z.stock, 0) + ifnull(o.Phase1, 0) + ifnull(o.Phase2, 0) as rsl_stock, -- 物流在庫
    ifnull(o.Phase2, 0) as hikiate_order, -- 引き当て済み、かつ、未発送在庫
    ifnull(o.Phase1, 0) as notyet_hikiate_order, -- 未引当注文（複数注文時の他商品が引きあたってない注文も含む）
    z.stock as available_zaiko, -- 有効在庫数
    z.partition_date
from ${ref('zaiko_mart')} z
left join
hikiate_order o
on o.logi_item_code = z.logi_item_code
left join
rsl_table
on o.jan_code = cast(rsl_table.jan_code as INT64)
where
z.partition_date = current_date('Asia/Tokyo')
and
z.place = 'RSL'